#include<GL/glut.h>
#include<string.h>
#include<math.h>
#include<time.h>
float h=0,l=0,p=0,q,slide=1,z=0,f=0,i,s,e=0;
float x=0,y=0;
int j=0;
float d=0,u,r=0,w=0,theta=0,t=90,m=70,n=55,angle=0,k=0;
void timerbackground(int v)
{
if(x==200)
x=x;
else
x+=0.5;


glutPostRedisplay();
glutTimerFunc(100,timerbackground,0);
}
void timer1rocket(int v)
{
if(y==30)
y=y;
else
y+=0.5;
if(z==80)
z=z;
else
z+=5;
glutPostRedisplay();
glutTimerFunc(80,timer1rocket,0);
}
//float s;
void timercloud(int v)
{
if(s==150)
s=s;
else
s+=0.5;
glutPostRedisplay();
glutTimerFunc(50,timercloud,0);

}
void layers(char *s)
{
int o;
for(o=0;o<strlen(s);o++)
{
glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24,s[o]);
}
}
void output1(char *s)
{
int k;
for(k=0;k<strlen(s);k++)
{
glutStrokeCharacter(GLUT_STROKE_ROMAN,s[k]);
}
}

void timerfall(int v)
{
if(q==160)
q=q;
else
q+=0.7;


glutPostRedisplay();
glutTimerFunc(10,timerfall,0);
}
void timerlayerrock(int v)
{
if(d==25)
d=d;
else
d+=0.5;
glutPostRedisplay();
glutTimerFunc(100,timerlayerrock,0);
}
void starsslide4(int v)
{
e=e+0.3;
glutPostRedisplay();
glutTimerFunc(10,starsslide4,0);
}
void timersatellite(int v)
{
if(m==70)
w=w+0.6;
else
w=w;
glutPostRedisplay();
glutTimerFunc(100,timersatellite,0);
}
void timerstars(int v)
{
if(m==70)
z=z+0.6;
else
z=z;
glutPostRedisplay();
glutTimerFunc(100,timerstars,0);
}
void timerlayerrock2(int v)
{
if(u==90)
{

u-=u;

}
else{

u-=0.5;

}


glutPostRedisplay();
glutTimerFunc(10,timerlayerrock2,0);
}
void timerrotate(int v)
{
if(angle==t)
angle=t;
else
angle+=1;
glutPostRedisplay();
glutTimerFunc(10,timerrotate,0);
}
void timerrotatemove(int v)
{
if(m==70)
d=d+0.2;
else
d=d;
glutPostRedisplay();
glutTimerFunc(100,timerrotatemove,0);
}
void timer(int v)
{
if(x==150)
x-=x;
else
x+=0.5;


glutPostRedisplay();
glutTimerFunc(50,timer,0);
}
void timer1(int v)
{
if(y==160)
y=y;
else
y+=0.5;
glutPostRedisplay();
glutTimerFunc(100,timer1,0);
}
void timerslide1(int v)
{
if(r==160)
r=r;
else
r+=0.7;


glutPostRedisplay();
glutTimerFunc(100,timerslide1,0);
}
void slide4satellitetimer(int v)
{
if(theta==45)
theta=t;
else
theta+=1;
glutPostRedisplay();
glutTimerFunc(10,slide4satellitetimer,0);
}

void output(char *s)
{
int k;
for(k=0;k<strlen(s);k++)
//glutStrokeCharacter(GLUT_STROKE_ROMAN,s[k]);
//glRasterPos3f(5.0,5.0,0.0);
glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24,s[k]);
}
void earthrotate(int v)
{
f+=0.3;
glutPostRedisplay();
glutTimerFunc(10,earthrotate,0);
}
void circleDraw(float r, float g, float b, int x, int y, int px, int py){
int i=0;
float theta;
glColor3f(r,g,b);
glBegin(GL_POLYGON);
for(i=0; i<360; i++){
theta = i*3.142/180;
glVertex2f(x+px*cos(theta),y+py*sin(theta));
}

glEnd();
}
void circlehalf(float r, float g, float b, int x, int y, int px, int py){
int i=0;
float theta;
glColor3f(r,g,b);
glBegin(GL_POLYGON);
for(i=290; i>120; i--){
theta = i*3.142/180;
glVertex2f(x-px*cos(theta),y-py*sin(theta));
}

glEnd();
}

void rectangle(float r, float g, float b, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4){
glColor3f(r,g,b);
glBegin(GL_POLYGON);
glVertex2f(x1,y1);
glVertex2f(x2,y2);
glVertex2f(x3,y3);
glVertex2f(x4,y4);
glEnd();
}
void delay(unsigned int mseconds)
{
    clock_t goal = mseconds + clock();
    while (goal > clock());
}
void stars()
{
glColor3f(1.0,1.0,1.0);
glPointSize(5);
glBegin(GL_POINTS);

glVertex2f(20,10);
glVertex2f(20,30);
glVertex2f(20,10);
glVertex2f(30,50);
glVertex2f(20,60);
glVertex2f(50,50);
glVertex2f(80,90);
glVertex2f(30,90);
glVertex2f(40,45);
glVertex2f(50,167);
glVertex2f(100,56);
glVertex2f(45,29);
glVertex2f(85,80);
glVertex2f(73,60);
glVertex2f(56,56);
glVertex2f(34,89);
glVertex2f(23,90);
glVertex2f(90,45);
glVertex2f(15,89);
glVertex2f(90,90);
glVertex2f(23,91);
glVertex2f(67,76);
glVertex2f(90,76);
glVertex2f(54,90);
glVertex2f(23,73);
glVertex2f(64,78);
glVertex2f(23,63);
glVertex2f(99,44);
glVertex2f(95,9);
glVertex2f(3,4);
glVertex2f(8,6);
glVertex2f(10,56);
glVertex2f(8,43);
glVertex2f(0,2);
glVertex2f(1,3);
glVertex2f(2,6);
glVertex2f(5,5);
glVertex2f(200,10);
glVertex2f(90,2);
glVertex2f(150,100);
glVertex2f(123,173);
glVertex2f(190,34);
glVertex2f(200,56);
glVertex2f(180,47);
glVertex2f(178,45);
glVertex2f(124,89);
glVertex2f(165,45);
glVertex2f(132,98);
glVertex2f(129,12);
glVertex2f(65,34);
glVertex2f(187,54);
glVertex2f(120,6);
glVertex2f(50,5);
glEnd();
}
void satellite()
{




glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(78.5,48);
glVertex2f(82,48);
glVertex2f(82,46);
glVertex2f(79,46);
glEnd();


/* glBegin(GL_POLYGON);
glColor3f(0.0,0.0,0.7);
glVertex2f(81,50);
glVertex2f(84,50);
glVertex2f(83,57);
glVertex2f(80,57);

glEnd();*/

glBegin(GL_POLYGON);
glColor3f(.0,0.0,0.7);
glVertex2f(81,50);
glVertex2f(84,50);
glVertex2f(83,57);
glVertex2f(80,57);

glEnd();

glBegin(GL_LINES);
glColor3f(1.0,1.0,1.0);
glVertex2f(81.5,50);
glVertex2f(80.5,57);
glVertex2f(82,50);
glVertex2f(81,57);
glVertex2f(82.5,50);
glVertex2f(81.5,57);
glVertex2f(83,50);
glVertex2f(82,57);
glVertex2f(83.5,50);
glVertex2f(82.5,57);

glVertex2f(80.2,56);
glVertex2f(83.2,56);
glVertex2f(80.3,55);
glVertex2f(83.3,55);
glVertex2f(80.5,54);
glVertex2f(83.5,54);
glVertex2f(80.6,53);
glVertex2f(83.6,53);
glVertex2f(80.7,52);
glVertex2f(83.8,52);
glVertex2f(80.85,51);
glVertex2f(83.88,51);

glEnd();




glColor3f(0.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(82,50);
glVertex2f(83,50);
glVertex2f(84,44);
glVertex2f(83,44);

glEnd();
glColor3f(0.0,0.0,0.7);
glBegin(GL_POLYGON);
glVertex2f(82,44);
glVertex2f(85,44);
glVertex2f(86,38);
glVertex2f(83,38);

glEnd();

glColor3f(1.0,1.0,1.0);
glBegin(GL_LINES);

glVertex2f(83.5,38);
glVertex2f(82.5,44);
glVertex2f(84,38);
glVertex2f(83,44);
glVertex2f(84.5,38);
glVertex2f(83.5,44);
glVertex2f(85,38);
glVertex2f(84,44);
glVertex2f(85.5,38);
glVertex2f(84.5,44);

glVertex2f(82.2,43);
glVertex2f(85.2,43);
glVertex2f(82.3,42);
glVertex2f(85.3,42);
glVertex2f(82.5,41);
glVertex2f(85.5,41);
glVertex2f(82.6,40);
glVertex2f(85.6,40);
glVertex2f(82.8,39);
glVertex2f(85.8,39);



glEnd();

glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(80,48);
glVertex2f(85,48);
glVertex2f(85,45);
glVertex2f(80,45);
glEnd();
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(79,49);
glVertex2f(81,49);
glVertex2f(82,44.5);
glVertex2f(80,44.5);
glEnd();
glBegin(GL_POLYGON);
glVertex2f(84,49);
glVertex2f(86,49);
glVertex2f(87,44.5);
glVertex2f(85,44.5);
glEnd();

glColor3f(0.7,0.7,0.7);

glBegin(GL_POLYGON);
glVertex2f(75,47);
glVertex2f(77,47.5);
glVertex2f(78,44.5);
glVertex2f(76,44);
glEnd();

glColor3f(0.0,0.0,0.0);

glBegin(GL_POLYGON);
glVertex2f(75,45.5);
glVertex2f(77,47.5);
glVertex2f(78,44.5);

glEnd();

glPushMatrix();
circlehalf(1.0, 1.0, 1.0, 77, 46.5,2.9, 3.05);
glPopMatrix();



}
void slide4bg()
{   glColor3f(0.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(0,0);
glVertex2f(200,0);
glVertex2f(200,100);
glVertex2f(0,200);
glEnd();
}



void background()
{  

/*glBegin(GL_POLYGON);
glColor3f(0.3,0.72,1.0);
glVertex2f(0,0-x);
glColor3f(0.0,0.41,0.70);
glVertex2f(200,0-x);
glColor3f(0.2,0.67,1.0);
glVertex2f(200,100-x);
glColor3f(0.0,0.47,0.8);
glVertex2f(0,100-x);
glEnd();*/


glColor3f(0.01, 0.0, 1.0);
glBegin(GL_POLYGON);
glVertex2f(0,150-x);
glColor3f(0.01,1.0,1.0);
glVertex2f(200,150-x);
glColor3f(0.01,1.0,1.0);
glVertex2f(200,0-x);
glColor3f(0.01,1.0,1.0);
glVertex2f(0,0-x);
glEnd();



}
void mountain()
{   glPushMatrix();
//glTranslatef(0,y-2,0);
    glColor3f(0.6,0.3,0.0);
glBegin(GL_POLYGON);
glVertex2f(5,15-x);
glVertex2f(70,15-x);
glVertex2f(45,35-x);

glEnd();
glColor3f(0.4,0.2,0.0);
glBegin(GL_POLYGON);
glVertex2f(125,50-x);
glVertex2f(160,15-x);
glVertex2f(90,15-x);

glEnd();
glColor3f(0.6,0.3,0.0);
glBegin(GL_POLYGON);
glVertex2f(50,15-x);
glVertex2f(150,15-x);
glVertex2f(110,55-x);

glEnd();
glPopMatrix();

}
void road()
{
glColor3f(0.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(0,0-x);
glVertex2f(200,0-x);
glVertex2f(200,15-x);
glVertex2f(0,15-x);
glEnd();
}
void cloud()
{
//cloud 1
glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+36.5,85.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+35.5,85,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+25,89,0);
glScalef(1.0,0.8,0.1);
glutSolidSphere(9,100,50);
glPopMatrix();
   
glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+25.5,88,0);
glScalef(1.0,0.8,0.1);
glutSolidSphere(9,100,50);
glPopMatrix();


glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+40,80,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+40.5,78.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

    glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+33.5,77.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();
   
    glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+33,78.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+20,81.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(9,100,50);
glPopMatrix();
   
glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+20.5,82.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(9,100,50);
glPopMatrix();


//cloud 2
glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+136.5,75.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+135.5,75,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+125,79,0);
glScalef(1.0,0.8,0.1);
glutSolidSphere(9,100,50);
glPopMatrix();
   
glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+125.5,78,0);
glScalef(1.0,0.8,0.1);
glutSolidSphere(9,100,50);
glPopMatrix();


glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+140,70,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+140.5,68.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

    glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+133.5,67.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();
   
    glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+133,68.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(6,100,50);
glPopMatrix();

glColor3f(0.50,0.50,0.50);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+120,71.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(9,100,50);
glPopMatrix();
   
glColor3f(0.9,0.9,0.9);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(x+120.5,72.5,0);
glScalef(1.2,0.8,0.1);
glutSolidSphere(9,100,50);
glPopMatrix();
}
void building()
{  


//building behind rocket
glLineWidth(4.0);
glColor3f(1.0,1.0,1.0);
glBegin(GL_LINES);
glVertex2f(97,20-x);
glVertex2f(97,70-x);
glVertex2f(97,70-x);
glVertex2f(114,70-x);
glVertex2f(114,70-x);
glVertex2f(114,20-x);
glVertex2f(105.5,70-x);
glVertex2f(105.5,20-x);
glVertex2f(97,70-x);
glVertex2f(114,60-x);
glVertex2f(114,60-x);
glVertex2f(97,50-x);
glVertex2f(97,50-x);
glVertex2f(114,40-x);
glVertex2f(114,40-x);
glVertex2f(97,30-x);
glVertex2f(97,30-x);
glVertex2f(114,20-x);
glVertex2f(114,70-x);
glVertex2f(97,60-x);
glVertex2f(97,60-x);
glVertex2f(114,50-x);
glVertex2f(114,50-x);
glVertex2f(97,40-x);
glVertex2f(97,40-x);
glVertex2f(114,30-x);
glVertex2f(114,30-x);
glVertex2f(97,20-x);
glEnd();
glLineWidth(1.0);
    //left building
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(2,15-x);
glVertex2f(16,15-x);
glVertex2f(16,50-x);
glVertex2f(2,50-x);
glEnd();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(4,17-x);
glVertex2f(14,17-x);
glVertex2f(14,50-x);
glVertex2f(4,50-x);
glEnd();
glColor3f(1.0,1.0,1.0);
glBegin(GL_LINES);
glVertex2f(7.5,50-x);
glVertex2f(7.5,17-x);
glVertex2f(10.5,50-x);
glVertex2f(10.5,17-x);
glVertex2f(4,23.66-x);
glVertex2f(14,23.66-x);
glVertex2f(4,29.66-x);
glVertex2f(14,29.66-x);
glVertex2f(4,35.66-x);
glVertex2f(14,35.66-x);
glVertex2f(4,41.66-x);
glVertex2f(14,41.66-x);
glEnd();
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(4,50-x);
glVertex2f(14,50-x);
glVertex2f(14,55-x);
glVertex2f(4,55-x);
glEnd();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(5,51-x);
glVertex2f(13,51-x);
glVertex2f(13,55-x);
glVertex2f(5,55-x);
glEnd();
glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(5,53-x);
glVertex2f(13,53-x);
glVertex2f(13,56-x);
glVertex2f(5,56-x);
glEnd();
glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(8,56-x);
glVertex2f(10,56-x);
glVertex2f(10,59-x);
glVertex2f(8,59-x);
glEnd();
glColor3f(1.0,1.0,1.0);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(9,61-x,0);
glutSolidSphere(3.0,100,50);
glPopMatrix();
//building 2
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(16,15-x);
glVertex2f(32,15-x);
glVertex2f(32,52-x);
glVertex2f(16,60-x);
glEnd();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(17,15-x);
glVertex2f(31,15-x);
glVertex2f(31,51-x);
glVertex2f(17,58-x);
glEnd();

glColor3f(1.0,1.0,1.0);


glBegin(GL_LINES);
glVertex2f(17,16.77-x);
glVertex2f(31,16.77-x);
glVertex2f(17,20.77-x);
glVertex2f(31,20.77-x);
glVertex2f(17,24.77-x);
glVertex2f(31,24.77-x);
glVertex2f(17,28.77-x);
glVertex2f(31,28.77-x);
glVertex2f(17,32.77-x);
glVertex2f(31,32.77-x);
glVertex2f(17,36.77-x);
glVertex2f(31,36.77-x);
glVertex2f(17,40.77-x);
glVertex2f(31,40.77-x);
glVertex2f(17,44.77-x);
glVertex2f(31,44.77-x);
glVertex2f(17,48.77-x);
glVertex2f(31,48.77-x);
glVertex2f(17,52.77-x);
glVertex2f(27.4,52.77-x);
glEnd();
glColor3f(1.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(38,15-x);
glVertex2f(44,15-x);
glVertex2f(44,19-x);
glVertex2f(38,19-x);
glEnd();
glLineWidth(4.0);
glColor3f(0.5,0.16,0);
glBegin(GL_LINES);
glVertex2f(38,19-x);
glVertex2f(40,50-x);
glVertex2f(44,19-x);
glVertex2f(42,50-x);
glVertex2f(38,19-x);
glVertex2f(44,22-x);
glVertex2f(44,22-x);
glVertex2f(38.7,25-x);
glVertex2f(38.7,25-x);
glVertex2f(43.5,28-x);
glVertex2f(43.5,28-x);
glVertex2f(39,32-x);
glVertex2f(39,32-x);
glVertex2f(43,34-x);
glVertex2f(43,34-x);
glVertex2f(39,37-x);
glVertex2f(39,37-x);
glVertex2f(42.7,40-x);
glVertex2f(42.7,40-x);
glVertex2f(39.5,43-x);
glVertex2f(39.5,43-x);
glVertex2f(42.3,46-x);
glVertex2f(42.3,46-x);
glVertex2f(40,49-x);

glEnd();
glLineWidth(1.0);
glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(39,50-x);
glVertex2f(43,50-x);
glVertex2f(42,53-x);
glVertex2f(40,53-x);
glEnd();
//rocket stand
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(90,15-x);
glVertex2f(120,15-x);
glVertex2f(120,20-x);
glVertex2f(90,20-x);
glEnd();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(100,20-x);
glVertex2f(105,20-x);
glVertex2f(105,50-x);
glVertex2f(100,50-x);
glEnd();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(80,45-x);
glVertex2f(100,45-x);
glVertex2f(100,50-x);
glVertex2f(80,50-x);
glEnd();

glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(105,20-x);
glVertex2f(107,20-x);
glVertex2f(107,50-x);
glVertex2f(105,50-x);
glEnd();
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(105,20-x);
glVertex2f(107,20-x);
glVertex2f(107,50-x);
glVertex2f(105,50-x);
glEnd();

//nasa building
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(135,15-x);
glVertex2f(170,15-x);
glVertex2f(170,50-x);
glVertex2f(135,50-x);
glEnd();
glColor3f(0.5,0.5,0.5);
glBegin(GL_POLYGON);
glVertex2f(145,15-x);
glVertex2f(160,15-x);
glVertex2f(160,50-x);
glVertex2f(145,50-x);
glEnd();
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(147,15-x);
glVertex2f(158,15-x);
glVertex2f(158,46-x);
glVertex2f(147,46-x);
glEnd();
glColor3f(0.6,0.8,1.0);
glBegin(GL_POLYGON);
glVertex2f(148,15-x);
glVertex2f(157,15-x);
glVertex2f(157,45-x);
glVertex2f(148,45-x);
glEnd();
glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(139,15-x);
glVertex2f(152,15-x);
glVertex2f(152,35-x);
glVertex2f(139,35-x);
glEnd();
glColor3f(0.6,0.8,1.0);
glBegin(GL_POLYGON);
glVertex2f(141,15-x);
glVertex2f(150,15-x);
glVertex2f(150,34-x);
glVertex2f(141,34-x);
glEnd();
//flag
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glColor3f(1.0,1.0,0.0);
glTranslatef(140,42.5-x,0);
glutSolidSphere(4.0,100,50);
glPopMatrix();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(138,40-x);
glVertex2f(138,45-x);
glVertex2f(138,45-x);
glVertex2f(141,40-x);
glVertex2f(141,40-x);
glVertex2f(141,45-x);
glEnd();

//tree
glColor3f(0.6,0.3,0.0);
glBegin(GL_POLYGON);
glVertex2f(191,15-x);
glVertex2f(193,15-x);
glVertex2f(193,35-x);
glVertex2f(191,35-x);
glEnd();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glColor3f(0.0,0.4,0.0);
glTranslatef(190,55-x,0);
glutSolidSphere(25.0,100,50);
glPopMatrix();
//tong building
glColor3f(0,0.8,0.63);
glBegin(GL_POLYGON);
glVertex2f(63,38-x);
glVertex2f(65,38-x);
glVertex2f(65,43-x);
glVertex2f(63,43-x);
glEnd();
glColor3f(0,0.8,0.63);
glBegin(GL_POLYGON);
glVertex2f(66,38-x);
glVertex2f(68,38-x);
glVertex2f(68,41-x);
glVertex2f(66,41-x);
glEnd();
glColor3f(0.1,0.69,1.0);
glBegin(GL_POLYGON);
glVertex2f(50,15-x);
glVertex2f(60,15-x);
glVertex2f(60,35-x);
glVertex2f(50,35-x);
glEnd();
glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(50,35-x);
glVertex2f(60,35-x);
glVertex2f(60,38-x);
glVertex2f(50,38-x);
glEnd();
glColor3f(0.9,0.9,0.9);
glBegin(GL_POLYGON);
glVertex2f(60,35-x);
glVertex2f(70,35-x);
glVertex2f(70,38-x);
glVertex2f(60,38-x);
glEnd();
glColor3f(0.2,0.73,1.0);
glBegin(GL_POLYGON);
glVertex2f(60,15-x);
glVertex2f(70,15-x);
glVertex2f(70,35-x);
glVertex2f(60,35-x);
glEnd();
glColor3f(0.6,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(50,15-x);
glVertex2f(58,15-x);
glVertex2f(58,25-x);
glVertex2f(50,25-x);
glEnd();
glColor3f(0.4,1.0,0.87);
glBegin(GL_POLYGON);
glVertex2f(58,15-x);
glVertex2f(63,15-x);
glVertex2f(63,25-x);
glVertex2f(58,25-x);
glEnd();
glColor3f(0.45,0.45,0.45);
glBegin(GL_POLYGON);
glVertex2f(58,25-x);
glVertex2f(63,25-x);
glVertex2f(63,27-x);
glVertex2f(58,27-x);
glEnd();
glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(50,25-x);
glVertex2f(58,25-x);
glVertex2f(58,27-x);
glVertex2f(50,27-x);
glEnd();
glColor3f(1.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(52,15-x);
glVertex2f(56,15-x);
glVertex2f(56,22-x);
glVertex2f(52,22-x);
glEnd();
glColor3f(0.6,0.3,0);
glBegin(GL_POLYGON);
glVertex2f(56,15-x);
glVertex2f(57,15-x);
glVertex2f(57,22-x);
glVertex2f(56,22-x);
glEnd();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glColor3f(1.0,1.0,1.0);
glTranslatef(53,32-x,0);
glutSolidSphere(1.5,100,50);
glPopMatrix();

glPushMatrix();
glColor3f(1.0,0.0,1.0);
glTranslatef(53,32-x,0);
glutSolidSphere(1.0,100,50);
glPopMatrix();

glPushMatrix();
glColor3f(1.0,1.0,1.0);
glTranslatef(58,32-x,0);
glutSolidSphere(1.5,100,50);
glPopMatrix();

glPushMatrix();
glColor3f(1.0,0.0,1.0);
glTranslatef(58,32-x,0);
glutSolidSphere(1.0,100,50);
glPopMatrix();

glColor3f(0,0.6,0.6);
glBegin(GL_POLYGON);
glVertex2f(70,15-x);
glVertex2f(85,15-x);
glVertex2f(85,25-x);
glVertex2f(70,25-x);
glEnd();
glColor3f(0.6,0.6,0);
glBegin(GL_POLYGON);
glVertex2f(70,16-x);
glVertex2f(85,16-x);
glVertex2f(85,23-x);
glVertex2f(70,23-x);
glEnd();
glColor3f(0.7,0.34,0);
glBegin(GL_POLYGON);
glVertex2f(80,16-x);
glVertex2f(82,16-x);
glVertex2f(82,23-x);
glVertex2f(80,23-x);
glEnd();






}
void slide3rocket()
{

glPushMatrix();
//fire

glColor3f(0.9960,0.5,0.0);
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();

glTranslatef(m,n,0);
glRotatef(angle,0,0,1);
glTranslatef(-m,-n,0);
glTranslatef(84.3,39+d,0);
glScalef(1.2,9.5,0.0);
glutSolidSphere(2,1000,500);
glTranslatef(-54,-45,0);
//glRotatef(theta,0,0,1);
glPopMatrix();
glColor3f(1.0,0.8196,0.1019);
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(m,n,0);
glRotatef(angle,0,0,1);
glTranslatef(-m,-n,0);
glTranslatef(84.4,37.1+d,0);
//glRotatef(theta,0,0,1);
glScalef(0.9,6.5,0.0);
glutSolidSphere(2,1000,500);
glTranslatef(-54,-45,0);
//glRotatef(theta,0,0,1);
glPopMatrix();
glColor3f(1.0,1.0,0.6);
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(m,n,0);
glRotatef(angle,0,0,1);
glTranslatef(-m,-n,0);
glTranslatef(84.5,40.1+d,0);
//glRotatef(theta,0,0,1);
glScalef(0.9,6.5,0.0);
glutSolidSphere(2,1000,500);
glTranslatef(-54,-45,0);
//glRotatef(theta,0,0,1);
glPopMatrix();

//moving rocket


glPushMatrix();

glTranslatef(0,d-2,0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(80,50);
glVertex2f(80,60);
glVertex2f(88,60);
glVertex2f(88,50);
glEnd();
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(80,35);
glVertex2f(80,50);
glVertex2f(88,50);
glVertex2f(88,35);
glEnd();
glBegin(GL_TRIANGLES);
glVertex2f(80,60);
glVertex2f(84,67);
glVertex2f(88,60);
glEnd();

glColor3f(1.0,1.0,1.0);
glBegin(GL_TRIANGLES);
glVertex2f(82,61);
glVertex2f(84,64);
glVertex2f(86,61);
glEnd();


glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);

glVertex2f(76,35);
glVertex2f(84,42);
glVertex2f(92,35);
//glVertex2f(55,38);
glEnd();

glColor3f(0.0,0.0,0.0);
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,42);
glVertex2f(84,44);
glEnd();
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,45);
glVertex2f(84,47);
glEnd();
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,48);
glVertex2f(84,50);
glEnd();
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,51);
glVertex2f(84,53);
glEnd();
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,54);
glVertex2f(84,56);
glEnd();
glPopMatrix();
glColor3f(1.0,0.0,0.0);
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(m,n,0);
glRotatef(angle,0,0,1);
glTranslatef(-m,-n,0);
glTranslatef(89,32+d,0);
glutSolidSphere(1.2,1000,500);
glTranslatef(-55,-32,0);
glPopMatrix();
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(m,n,0);
glRotatef(angle,0,0,1);
glTranslatef(-m,-n,0);
glTranslatef(79,32+d,0);
glScalef(1.0,1.5,0.0);
glutSolidSphere(1.2,1000,500);
glTranslatef(-45,-32,0);
glPopMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(m,n,0);
glRotatef(angle,0,0,1);
glTranslatef(-m,-n,0);
glTranslatef(89,32+d,0);
glScalef(1.0,1.5,0.0);
glutSolidSphere(1.2,1000,500);
glTranslatef(-55,-32,0);
glPopMatrix();
glPopMatrix();

}
void slide4stars()
{
glColor3f(1.0,1.0,1.0);
glPointSize(4);
glBegin(GL_POINTS);

glVertex2f(20,10);
glVertex2f(20,30);
glVertex2f(20,10);
glVertex2f(30,50);
glVertex2f(20,60);
glVertex2f(50,50);
glVertex2f(80,90);
glVertex2f(30,90);
glVertex2f(40,45);
glVertex2f(50,167);
glVertex2f(100,56);
glVertex2f(45,29);
glVertex2f(85,80);
glVertex2f(73,60);
glVertex2f(56,56);
glVertex2f(34,89);
glVertex2f(23,90);
glVertex2f(90,45);
glVertex2f(15,89);
glVertex2f(90,90);
glVertex2f(23,91);
glVertex2f(67,76);
glVertex2f(90,76);
glVertex2f(54,90);
glVertex2f(23,73);
glVertex2f(64,78);
glVertex2f(23,63);
glVertex2f(99,44);
glVertex2f(95,9);
glVertex2f(3,4);
glVertex2f(8,6);
glVertex2f(10,56);
glVertex2f(8,43);

glEnd();
}
void slide4satellite()
{

glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(78.5,48);
glVertex2f(82,48);
glVertex2f(82,46);
glVertex2f(79,46);
glEnd();




glBegin(GL_POLYGON);
glColor3f(.0,0.0,0.7);
glVertex2f(81,50);
glVertex2f(84,50);
glVertex2f(83,57);
glVertex2f(80,57);

glEnd();

glBegin(GL_LINES);
glColor3f(1.0,1.0,1.0);
glVertex2f(81.5,50);
glVertex2f(80.5,57);
glVertex2f(82,50);
glVertex2f(81,57);
glVertex2f(82.5,50);
glVertex2f(81.5,57);
glVertex2f(83,50);
glVertex2f(82,57);
glVertex2f(83.5,50);
glVertex2f(82.5,57);

glVertex2f(80.2,56);
glVertex2f(83.2,56);
glVertex2f(80.3,55);
glVertex2f(83.3,55);
glVertex2f(80.5,54);
glVertex2f(83.5,54);
glVertex2f(80.6,53);
glVertex2f(83.6,53);
glVertex2f(80.7,52);
glVertex2f(83.8,52);
glVertex2f(80.85,51);
glVertex2f(83.88,51);

glEnd();




glColor3f(0.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(82,50);
glVertex2f(83,50);
glVertex2f(84,44);
glVertex2f(83,44);

glEnd();
glColor3f(0.0,0.0,0.7);
glBegin(GL_POLYGON);
glVertex2f(82,44);
glVertex2f(85,44);
glVertex2f(86,38);
glVertex2f(83,38);

glEnd();

glColor3f(1.0,1.0,1.0);
glBegin(GL_LINES);

glVertex2f(83.5,38);
glVertex2f(82.5,44);
glVertex2f(84,38);
glVertex2f(83,44);
glVertex2f(84.5,38);
glVertex2f(83.5,44);
glVertex2f(85,38);
glVertex2f(84,44);
glVertex2f(85.5,38);
glVertex2f(84.5,44);

glVertex2f(82.2,43);
glVertex2f(85.2,43);
glVertex2f(82.3,42);
glVertex2f(85.3,42);
glVertex2f(82.5,41);
glVertex2f(85.5,41);
glVertex2f(82.6,40);
glVertex2f(85.6,40);
glVertex2f(82.8,39);
glVertex2f(85.8,39);



glEnd();

glColor3f(0.7,0.7,0.7);
glBegin(GL_POLYGON);
glVertex2f(80,48);
glVertex2f(85,48);
glVertex2f(85,45);
glVertex2f(80,45);
glEnd();
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(79,49);
glVertex2f(81,49);
glVertex2f(82,44.5);
glVertex2f(80,44.5);
glEnd();
glBegin(GL_POLYGON);
glVertex2f(84,49);
glVertex2f(86,49);
glVertex2f(87,44.5);
glVertex2f(85,44.5);
glEnd();

glColor3f(0.7,0.7,0.7);

glBegin(GL_POLYGON);
glVertex2f(75,47);
glVertex2f(77,47.5);
glVertex2f(78,44.5);
glVertex2f(76,44);
glEnd();

glColor3f(0.0,0.0,0.0);

glBegin(GL_POLYGON);
glVertex2f(75,45.5);
glVertex2f(77,47.5);
glVertex2f(78,44.5);

glEnd();

glPushMatrix();
circlehalf(1.0, 1.0, 1.0, 77, 46.5,2.9, 3.05);
glPopMatrix();


}
void rocket()
{
//fire
glColor3f(0.9960,0.5,0.0);
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(84.3,39+y,0);
glScalef(1.2,9.5,0.0);
glutSolidSphere(2,1000,500);
glTranslatef(-54,-45,0);
glPopMatrix();
glColor3f(1.0,0.8196,0.1019);
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(84.4,37.1+y,0);
glScalef(0.9,6.5,0.0);
glutSolidSphere(2,1000,500);
glTranslatef(-54,-45,0);
glPopMatrix();
glColor3f(1.0,1.0,0.6);
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(84.5,40.1+y,0);
glScalef(0.9,6.5,0.0);
glutSolidSphere(2,1000,500);
glTranslatef(-54,-45,0);
glPopMatrix();

//moving rocket
glPushMatrix();
glTranslatef(0,y-2,0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(80,50);
glVertex2f(80,60);
glVertex2f(88,60);
glVertex2f(88,50);
glEnd();
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(80,35);
glVertex2f(80,50);
glVertex2f(88,50);
glVertex2f(88,35);
glEnd();

glBegin(GL_TRIANGLES);
glVertex2f(80,60);
glVertex2f(84,67);
glVertex2f(88,60);
glEnd();

glColor3f(1.0,1.0,1.0);
glBegin(GL_TRIANGLES);
glVertex2f(82,61);
glVertex2f(84,64);
glVertex2f(86,61);
glEnd();
glColor3f(1.0,1.0,1.0);

glBegin(GL_POLYGON);
glVertex2f(78,33);
glVertex2f(78,45);
glVertex2f(80,45);
glVertex2f(80,33);
glEnd();
glBegin(GL_POLYGON);
glVertex2f(88,33);
glVertex2f(88,45);
glVertex2f(90,45);
glVertex2f(90,33);
glEnd();

glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);

glVertex2f(76,35);
glVertex2f(84,42);
glVertex2f(92,35);
//glVertex2f(55,38);
glEnd();
glColor3f(1.0,0.0,0.0);
glBegin(GL_TRIANGLES);
glVertex2f(79,36);
glVertex2f(84,40);
glVertex2f(89,36);
glEnd();
glColor3f(1.0,0.0,0.0);
glBegin(GL_TRIANGLES);
glVertex2f(78,45);
glVertex2f(79,47);
glVertex2f(80,45);
glEnd();
glColor3f(1.0,0.0,0.0);
glBegin(GL_TRIANGLES);
glVertex2f(88,45);
glVertex2f(89,47);
glVertex2f(90,45);
glEnd();
glColor3f(0.0,0.0,0.0);
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,42);
glVertex2f(84,44);
glEnd();
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,45);
glVertex2f(84,47);
glEnd();
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,48);
glVertex2f(84,50);
glEnd();
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,51);
glVertex2f(84,53);
glEnd();
//glLineWidth(4);
glBegin(GL_LINES);
glVertex2f(84,54);
glVertex2f(84,56);
glEnd();
glPopMatrix();
glColor3f(1.0,0.0,0.0);
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(89,32+y,0);
glutSolidSphere(1.2,1000,500);
glTranslatef(-55,-32,0);
glPopMatrix();
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(79,32+y,0);
glScalef(1.0,1.5,0.0);
glutSolidSphere(1.2,1000,500);
glTranslatef(-45,-32,0);
glPopMatrix();
glPushMatrix();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glTranslatef(89,32+y,0);
glScalef(1.0,1.5,0.0);
glutSolidSphere(1.2,1000,500);
glTranslatef(-55,-32,0);
glPopMatrix();
}
void rotateMoontimer(int v){
int k,h=0,a,  b, c, d;
float thetatheta;

// h+=0.3;
if(h>360)
{

h=30;


}
else
h+=0.3;


glFlush();
//delay(30);

glutPostRedisplay();
glutTimerFunc(10,rotateMoontimer,0);
glFlush();
}
void earth()
{


glPushMatrix();
circleDraw(0.0, 0.7, 0.0, 125, 60,4.09, 5.05);
circleDraw(0.0, 0.0, 1.0, 126, 53,1.4, 2.05);
//circleDraw(0.0, 0.0, 1.0, 66, 53,1.4, 2.05);
glPopMatrix();

glPushMatrix();
circleDraw(0.0, 0.0, 1.0, 121, 58,1, 2.05);
circleDraw(0.0, 0.0, 1.0, 121, 60,1, 2.05);
circleDraw(0.0, 0.0, 1.0, 128.4, 64,1, 2.05);
circleDraw(0.0, 0.0, 1.0, 129.5, 60,1, 2.05);
circleDraw(0.0, 0.0, 1.0, 129.5, 57,1, 2.05);
circleDraw(0.0, 0.0, 1.0, 122, 55,1.5, 2.05);
circleDraw(0.0, 0.0, 1.0, 127, 54,3.5, 2.05);
circleDraw(0.0, 0.7, 0.0, 120, 51,3.5, 3.05);
circleDraw(0.0, 0.7, 0.0, 123, 48,3.5, 3.05);
circleDraw(0.0, 0.0, 1.0, 118, 50.4,1.0, 1.0);
circleDraw(0.0, 0.0, 1.0, 117, 51,1.0, 1.0);
circleDraw(0.0, 0.0, 1.0, 119.9, 48.5,1.4, 1.5);
circleDraw(0.0, 0.0, 1.0, 120, 47.7,1.0, 1.0);
circleDraw(0.0, 0.0, 1.0, 125, 46.5,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 125, 45,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 126, 47,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 124, 51,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 124, 51,1.5, 1.5);
circleDraw(0.0, 0.7, 0.0, 132, 55,2.5, 2.5);
circleDraw(0.0, 0.0, 1.0, 130, 56,2.5, 2.5);
circleDraw(0.0, 0.0, 1.0, 133, 57,2.5, 2.5);
circleDraw(0.0, 0.7, 0.0, 128, 70,2.5, 2.5);
circleDraw(0.0, 0.7, 0.0, 125, 70,2.5, 2.5);
circleDraw(0.0, 0.0, 1.0, 124, 72,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 125.5, 72,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 126, 72.5,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 127, 72,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 129, 72,1.5, 1.5);
circleDraw(0.0, 0.7, 0.0, 127, 68,2.5, 1.5);
circleDraw(0.0, 0.7, 0.0, 127, 60,1.5, 2.5);

circleDraw(0.0, 0.0, 1.0, 118, 58,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 118, 61,1.5, 1.5);
circleDraw(0.0, 0.7, 0.0, 112, 60,5.5, 5.5);
circleDraw(0.0, 0.0, 1.0, 115, 66,3.5, 3.5);
circleDraw(0.0, 0.0, 1.0, 118, 61,3.5, 3.5);
circleDraw(0.0, 0.0, 1.0, 107, 61,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 106.5, 59,2, 1.5);
circleDraw(0.0, 0.0, 1.0, 109.5, 54,3.5, 3.5);
circleDraw(0.0, 0.7, 0.0, 117.5, 69,3.5, 3.5);
circleDraw(0.0, 0.0, 1.0, 119.5, 67,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 120, 68,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 119, 72.5,2.5, 2.5);
circleDraw(0.0, 0.7, 0.0, 134, 63,3.5, 3.5);
circleDraw(0.0, 0.0, 1.0, 137, 63,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 136, 64,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 135, 65,1.5, 1.5);
circleDraw(0.0, 0.0, 1.0, 135, 60.5,2.5, 2.5);
//circleDraw(0.0, 0.7, 1.0, 60, 65,2.5, 2.5);
//circleDraw(0.0, 0.7, 1.0, 73, 64,2.5, 2.5);
// circleDraw(0.0, 0.7, 1.0, 69, 50,2.5, 2.5);
glPopMatrix();

}
//slide2smoke
void smoke()
{  

    //smoke
glColor3f(0.5,0.5,0.5);
glBegin(GL_POLYGON);
glVertex2f(82,33-x);
glVertex2f(86,33-x);
glVertex2f(86,20-x);
glVertex2f(82,20-x);
glEnd();
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
glPushMatrix();
glTranslatef(82,30-x,0);
glutSolidSphere(2.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(86.5,30-x,0);
glutSolidSphere(2.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(81,27-x,0);
glutSolidSphere(3.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(57,2-x,0);
glutSolidSphere(9.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(70,5-x,0);
glutSolidSphere(7.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(80,5-x,0);
glutSolidSphere(7.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(90,5-x,0);
glutSolidSphere(7.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(100,5-x,0);
glutSolidSphere(9.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(115,5-x,0);
glutSolidSphere(9.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(70,13-x,0);
glutSolidSphere(7.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(63,11-x,0);
glutSolidSphere(4.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(78,15-x,0);
glutSolidSphere(7.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(88,15-x,0);
glutSolidSphere(7.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(98,15-x,0);
glutSolidSphere(7.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(108,13-x,0);
glutSolidSphere(4.0,100,50);

glPopMatrix();
glPushMatrix();
glTranslatef(77,20-x,0);
glutSolidSphere(7.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(90,20-x,0);
glutSolidSphere(7.0,100,50);
glPopMatrix();
glPushMatrix();
glTranslatef(88,26-x,0);
glutSolidSphere(3.0,100,50);
glPopMatrix();
glFlush();

}

void first()
{
glClear(GL_COLOR_BUFFER_BIT);
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2i(0,100);
glColor3f(0.0,1.0,1.0);
glVertex2i(90,50);
glColor3f(0.0,0.0,1.0);
glVertex2i(180,100);
glEnd();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2i(0,0);
glColor3f(0.0,1.0,1.0);
glVertex2i(90,50);
glColor3f(1.0,1.0,1.0);
glVertex2i(0,100);
glEnd();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2i(0,0);
glColor3f(0.0,1.0,1.0);
glVertex2i(90,50);
glColor3f(1.0,1.0,1.0);
glVertex2i(180,0);
glEnd();
glPushMatrix();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
glVertex2i(180,100);
glColor3f(0.0,1.0,1.0);
glVertex2i(90,50);
glColor3f(1.0,1.0,1.0);
glVertex2i(180,0);
glEnd();
glPopMatrix();
glPushMatrix();
glTranslatef(-90+r,0,0);
satellite();
glPopMatrix();
glPushMatrix();
glColor3f(0,0,0.398);
glRasterPos3f(50,88,0.0);
output("MANGALORE  INSTITUTE  OF  TECHNOLOGY  AND  ENGINEERING");
glPopMatrix();
glPushMatrix();
glRasterPos3f(68,75,0.0);
output("Department Of Computer Science & Engineering");
glPopMatrix();
glPushMatrix();
glRasterPos3f(77,60,0.0);
output("CG MINI PROJECT ON ");
glPopMatrix();
glPushMatrix();
glColor3f(1.0,0.0,0.0);
glRasterPos3f(77,50,0.0);
output("ROCKET LAUNCHING");
glPopMatrix();
glColor3f(0.0,0.0,0.0);
glPushMatrix();
glRasterPos3f(37.5,40,0.0);
output("LIKHITHA");
glPopMatrix();
glPushMatrix();
glRasterPos3f(37,36,0.0);
output("4MT20CS089");
glPopMatrix();
glPushMatrix();
glRasterPos3f(137.4,40,0.0);
output("PAVANA");
glPopMatrix();
glPushMatrix();
glRasterPos3f(137,36,0.0);
output("4MT20CS112");
glPopMatrix();
glPushMatrix();
glRasterPos3f(80,27,0.0);
output("Under Guidance Of");
glPopMatrix();
glPushMatrix();
glRasterPos3f(81,22,0.0);
output("Ms. Sunitha N V");
glPopMatrix();
glFlush();
}
void second()
{

glClear(GL_COLOR_BUFFER_BIT);

glMatrixMode(GL_MODELVIEW);
glLoadIdentity();


glPushMatrix();

background();
glPopMatrix();
glPushMatrix();
cloud();
glPopMatrix();
glPushMatrix();
mountain();
glPopMatrix();
glPushMatrix();
building();
glPopMatrix();
glPushMatrix();
road();
glPopMatrix();
glPushMatrix();
rocket();
glPopMatrix();
glPushMatrix();

smoke();
glPopMatrix();
glFlush();
}
void third()
{
glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
//layer names
glPushMatrix();
glColor3f(0.3,0.3,1);
glTranslatef(88,-15-d,0);
glutSolidSphere(75.0,50,25);
glPopMatrix();
glPushMatrix();
glColor3f(0.4,0.4,1);
glTranslatef(88,-30-d,0);
glutSolidSphere(65.0,50,55);
glPopMatrix();
glPushMatrix();
glColor3f(0,0.8,1);
glTranslatef(88,-25-d,0);
glutSolidSphere(45.0,50,55);
glPopMatrix();
glPushMatrix();
glColor3f(0.0,0.0,1.0);
glTranslatef(88,-30-d,0);
glScalef(1.0,1.0,0.0);
glutSolidSphere(42.0,50,55);
glPopMatrix();
glPushMatrix();
glColor3f(1.0,1.0,1.0);
glRasterPos3f(80,39-d,0);
layers("MESOSPHERE");
glPopMatrix();
glPushMatrix();
glColor3f(1.0,1.0,1.0);
glRasterPos3f(80,25-d,0);
layers("STRATOSPHERE");
glPopMatrix();
glPushMatrix();
glColor3f(1.0,1.0,1.0);
glRasterPos3f(80,15-d,0);
layers("TROPOSPHERE");
glPopMatrix();
glPushMatrix();
   glTranslatef(-175+w,20.8,0);
   satellite();
   glPopMatrix();
  glPushMatrix();
  glPushMatrix();
glTranslatef(0,u-2,0);
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(78-q,33);
glVertex2f(78-q,45);
glVertex2f(80-q,45);
glVertex2f(80-q,33);
glEnd();
glBegin(GL_POLYGON);
glVertex2f(88+q,33);
glVertex2f(88+q,45);
glVertex2f(90+q,45);
glVertex2f(90+q,33);
glEnd();
glColor3f(1.0,0.0,0.0);
glBegin(GL_TRIANGLES);
glVertex2f(78-q,45);
glVertex2f(79-q,47);
glVertex2f(80-q,45);
glEnd();
glColor3f(1.0,0.0,0.0);
glBegin(GL_TRIANGLES);
glVertex2f(88+q,45);
glVertex2f(89+q,47);
glVertex2f(90+q,45);
glEnd();
glPopMatrix();
glTranslatef(m,n,0);
glRotatef(angle,0,0,1);
glTranslatef(-m,-n,0);
slide3rocket();
glPopMatrix();
glTranslatef(100-w,80-w,0);
glPushMatrix();
  stars();
    glPopMatrix();
    glTranslatef(300-w,300-w,0);
glPushMatrix();
  stars();
    glPopMatrix();
   glFlush();
}
void fourth()
{
glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    glPushMatrix();
    slide4bg();
    glPopMatrix();
      //glPushMatrix();
/*glTranslatef(30,50,0);
glRotatef(theta, 0.0, 0.0, 1.0);
glTranslatef(-30,-50,0);*/
//slide4stars();

glPushMatrix();
glTranslatef(100-e,80-e,0);
stars();
glPopMatrix();
glPushMatrix();
glTranslatef(300-e,300-e,0);
stars();
 glPopMatrix();
//glPopMatrix();                                                    
//moon
glPushMatrix();
circleDraw(1.0, 1.0, 1.0, 35, 50,10.09, 9.05);
glPopMatrix();
/*glPushMatrix();
circleDraw(0.0, 0.0, 1.0, 72.5, 60,19.09, 19.05);
glPopMatrix();*/
//non rotating moon
glPushMatrix();
circleDraw(0.0, 0.0, 1.0, 122.1, 60,20.09, 17.05);
glPopMatrix();



//satellite rotation
glPushMatrix();
glTranslatef(20,50,0);
glRotatef(theta, 0.0, 0.0, 1.0);
glTranslatef(-70,-60,0);

slide4satellite();
glPopMatrix();
glPushMatrix();
//glTranslatef(65,50,0);
//glRotatef(180-f, 0.0, 0.0, 1.0);
 //glTranslatef(-170,-105,0);
earth();

glPopMatrix();


glFlush();
}
void fifth()
{
glClear(GL_COLOR_BUFFER_BIT);
glPushMatrix();
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2i(0,100);
glColor3f(0.0,1.0,1.0);
glVertex2i(90,50);
glColor3f(0.0,0.0,1.0);
glVertex2i(180,100);
glEnd();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
//glColor3f(0.0,1.0,1.0);
glVertex2i(0,0);
glColor3f(0.0,1.0,1.0);
glVertex2i(90,50);
glColor3f(1.0,1.0,1.0);
glVertex2i(0,100);
glEnd();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
//glColor3f(1.0,0.0,0.0);
glVertex2i(0,0);
glColor3f(0.0,1.0,1.0);
glVertex2i(90,50);
glColor3f(1.0,1.0,1.0);
glVertex2i(180,0);
glEnd();
glPushMatrix();
glColor3f(0.0,0.0,1.0);
glBegin(GL_POLYGON);
//glColor3f(1.0,0.0,0.0);
glVertex2i(180,100);
glColor3f(0.0,1.0,1.0);
glVertex2i(90,50);
glColor3f(1.0,1.0,1.0);
glVertex2i(180,0);

glEnd();
glColor3f(1.0,1.0,1.0);
glPushMatrix();
glTranslatef(50,50,0);
glScalef(0.09,0.1,0.0);
glLineWidth(5.0);

output1("THANK YOU");
glPopMatrix();
glLineWidth(1.0);

}
void keys(unsigned char key,int x,int y)
{
if(key=='A'||key=='a')
{
slide=1;
//glutPostRedisplay();
}
if(key=='B'||key=='b')
{

slide=2;
timer1rocket(0);
timercloud(0);
timerbackground(0);
glutPostRedisplay();
}
if(key=='C'||key=='c')
{
slide=3;
timerfall(0);
timerlayerrock(0);
timerlayerrock2(0);
timersatellite(0);
timerrotate(0);
timerrotatemove(0);
//glutPostRedisplay();
glutPostRedisplay();
}
if(key=='D'||key=='d')
{

slide=4;
rotateMoontimer(0);
slide4satellitetimer(0);
timersatellite(0);
starsslide4(0);

earthrotate(0);
glutPostRedisplay();
}
if(key=='E'||key=='e')
{
slide=5;
}

}
void display()
{
glClear(GL_COLOR_BUFFER_BIT);
if(slide==1)
{
first();


}
else if(slide==2){
second();
}
else if(slide==3)
{
third();


}
else if(slide==4)
{
fourth();
}
else if(slide==5)
{
fifth();
}
glFlush();
}
void myReshape(int w,int h)
{
glViewport(0,0,w,h);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
if(w<=h)
glOrtho(0.0*(GLfloat)h/(GLfloat)w,100.0*(GLfloat)h/(GLfloat)w,0.0,100.0,0.0,100.0);
else
glOrtho(0.0*(GLfloat)w/(GLfloat)h,100.0*(GLfloat)w/(GLfloat)h,0.0,100.0,0.0,100.0);
}
int main(int argC,char **argV)
{
glutInit(&argC,argV);
glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
glutInitWindowSize(1000,1000);
glutInitWindowPosition(50,10);
glutCreateWindow("slide 1");
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glClearColor(0.01,0.0,0.7,0.0);
glutDisplayFunc(display);
glutReshapeFunc(myReshape);
glutKeyboardFunc(keys);
timerslide1(0);
glutFullScreen();
glutMainLoop();
return 0;
}

